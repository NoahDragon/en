<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hard Code</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://en.abnerchou.me/"/>
  <updated>2019-11-09T18:00:49.085Z</updated>
  <id>https://en.abnerchou.me/</id>
  
  <author>
    <name>Abner Chou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Why you need QT for your side projects</title>
    <link href="https://en.abnerchou.me/Blog/7d17e074/"/>
    <id>https://en.abnerchou.me/Blog/7d17e074/</id>
    <published>2019-10-09T22:15:34.000Z</published>
    <updated>2019-11-09T18:00:49.085Z</updated>
    
    <content type="html"><![CDATA[<p>I’m working on an side project which need a fancy GUI interface, so I was choosing between Webassemble and QT.This article will briefly descibe how I made the decision.</p><a id="more"></a><p>TL;DR: I choose QT as sibe project GUI creator for its strong community and webassemble support.</p><p>Before I start mubling, I would like to state my view on the GUI vs CLI.I like to use CLI, as it is easy to integrate with pipe and automation process.Also devloping CLI is focusing on functionality instead of aligning pixels.Moreover, it feels geek and cool.However, I also found the esiest understandable application usually have a good GUI.A picture is worthing a thousand of words.GUI is that picture in a program.The best applications in my mind is that have both GUI and CLI.</p><p>Recently, I was looking for a GUI library which is open source and cross-platform.The first thing comes to my mind is the web development, like React and Vue.However, JS has bad reputation on performance, and my side project is based on video processing.Then I googled a little bit, seems webassemble is the best solution to overcome the performance concerns.But QT can also generate webassemble applications.</p><p>After trying both, I have conclude their pros and cons in the following:</p><h3 id="Webassemble"><a href="#Webassemble" class="headerlink" title="Webassemble"></a>Webassemble</h3><h4 id="Pros"><a href="#Pros" class="headerlink" title="Pros"></a>Pros</h4><ul><li>New technology</li><li>Supported by major browsers</li><li>Faster</li></ul><h4 id="Cons"><a href="#Cons" class="headerlink" title="Cons"></a>Cons</h4><ul><li>Performance is generally 30% better than JS (not really impresive)(<a href="https://medium.com/@torch2424/webassembly-is-fast-a-real-world-benchmark-of-webassembly-vs-es6-d85a23f8e193" target="_blank" rel="noopener">ref</a>)</li><li>Not mature, many features underdevlopment and can cause wired issues</li><li>Only support C/C++</li></ul><h3 id="QT"><a href="#QT" class="headerlink" title="QT"></a>QT</h3><h4 id="Pros-1"><a href="#Pros-1" class="headerlink" title="Pros"></a>Pros</h4><ul><li>Support Python (personal preference)</li><li>Cross-platform build binary</li><li>IDE support</li></ul><h4 id="Cons-1"><a href="#Cons-1" class="headerlink" title="Cons"></a>Cons</h4><ul><li>Need to pay attention to its license</li><li>Current project directory could not be recognized correctly on Windows</li><li>Many issues on QT creator</li></ul><p>In summary, webassemble is still not mature for building a project.If you still don’t want to miss this trends, use QT instead.As it can also generate webassemble application, meanwhile, doesn’t need to worry about the low level implementation.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I’m working on an side project which need a fancy GUI interface, so I was choosing between Webassemble and QT.
This article will briefly descibe how I made the decision.&lt;/p&gt;
    
    </summary>
    
      <category term="Programming" scheme="https://en.abnerchou.me/categories/Programming/"/>
    
    
      <category term="QT" scheme="https://en.abnerchou.me/tags/QT/"/>
    
      <category term="GUI" scheme="https://en.abnerchou.me/tags/GUI/"/>
    
      <category term="Webassemble" scheme="https://en.abnerchou.me/tags/Webassemble/"/>
    
      <category term="Side Project" scheme="https://en.abnerchou.me/tags/Side-Project/"/>
    
  </entry>
  
  <entry>
    <title>OpenAI Gym Board Games Env for 0.9.6 Above</title>
    <link href="https://en.abnerchou.me/Blog/c2dbdabe/"/>
    <id>https://en.abnerchou.me/Blog/c2dbdabe/</id>
    <published>2018-08-06T22:32:53.000Z</published>
    <updated>2019-11-09T18:00:49.085Z</updated>
    
    <content type="html"><![CDATA[<p>Since Gym 0.9.6, the board games environment has been removed from the default package as they are not maintained by OpenAI [<a href="https://github.com/openai/gym/releases/tag/v0.9.6" target="_blank" rel="noopener">ref</a>].This article helps who would like to run their AI on Go or Hex in OpenAI Gym.</p><a id="more"></a><ol><li><p>Locate the python Gym package folder. In my case, it is under <code>~/anaconda3/envs/openai-gym/lib/python3.5/site-packages/gym</code>.</p></li><li><p>Download the Gym <a href="https://github.com/openai/gym/archive/v0.9.5.zip" target="_blank" rel="noopener">0.9.5</a> source code which contains the board games environment.</p></li><li><p>Copy the board_game folder from 0.9.5 source code (under <code>/gym-0.9.5/gym/envs/</code>) to your local Gym package envrionment folder (my case is <code>~/anaconda3/envs/openai-gym/lib/python3.5/site-packages/gym/envs</code>).</p></li><li><p>Add the following code into <strong>init</strong>.py (<code>~/anaconda3/envs/openai-gym/lib/python3.5/site-packages/gym/envs/__init__.py</code>). It will register those envs.</p></li></ol><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Board games</span><span class="token comment" spellcheck="true"># ----------------------------------------</span>register<span class="token punctuation">(</span>    id<span class="token operator">=</span><span class="token string">'Go9x9-v0'</span><span class="token punctuation">,</span>    entry_point<span class="token operator">=</span><span class="token string">'gym.envs.board_game:GoEnv'</span><span class="token punctuation">,</span>    kwargs<span class="token operator">=</span><span class="token punctuation">{</span>        <span class="token string">'player_color'</span><span class="token punctuation">:</span> <span class="token string">'black'</span><span class="token punctuation">,</span>        <span class="token string">'opponent'</span><span class="token punctuation">:</span> <span class="token string">'pachi:uct:_2400'</span><span class="token punctuation">,</span>        <span class="token string">'observation_type'</span><span class="token punctuation">:</span> <span class="token string">'image3c'</span><span class="token punctuation">,</span>        <span class="token string">'illegal_move_mode'</span><span class="token punctuation">:</span> <span class="token string">'lose'</span><span class="token punctuation">,</span>        <span class="token string">'board_size'</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># The pachi player seems not to be determistic given a fixed seed.</span>    <span class="token comment" spellcheck="true"># (Reproduce by running 'import gym; h = gym.make('Go9x9-v0'); h.seed(1); h.reset(); h.step(15); h.step(16); h.step(17)' a few times.)</span>    <span class="token comment" spellcheck="true">#</span>    <span class="token comment" spellcheck="true"># This is probably due to a computation time limit.</span>    nondeterministic<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token punctuation">)</span>register<span class="token punctuation">(</span>    id<span class="token operator">=</span><span class="token string">'Go19x19-v0'</span><span class="token punctuation">,</span>    entry_point<span class="token operator">=</span><span class="token string">'gym.envs.board_game:GoEnv'</span><span class="token punctuation">,</span>    kwargs<span class="token operator">=</span><span class="token punctuation">{</span>        <span class="token string">'player_color'</span><span class="token punctuation">:</span> <span class="token string">'black'</span><span class="token punctuation">,</span>        <span class="token string">'opponent'</span><span class="token punctuation">:</span> <span class="token string">'pachi:uct:_2400'</span><span class="token punctuation">,</span>        <span class="token string">'observation_type'</span><span class="token punctuation">:</span> <span class="token string">'image3c'</span><span class="token punctuation">,</span>        <span class="token string">'illegal_move_mode'</span><span class="token punctuation">:</span> <span class="token string">'lose'</span><span class="token punctuation">,</span>        <span class="token string">'board_size'</span><span class="token punctuation">:</span> <span class="token number">19</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    nondeterministic<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token punctuation">)</span>register<span class="token punctuation">(</span>    id<span class="token operator">=</span><span class="token string">'Hex9x9-v0'</span><span class="token punctuation">,</span>    entry_point<span class="token operator">=</span><span class="token string">'gym.envs.board_game:HexEnv'</span><span class="token punctuation">,</span>    kwargs<span class="token operator">=</span><span class="token punctuation">{</span>        <span class="token string">'player_color'</span><span class="token punctuation">:</span> <span class="token string">'black'</span><span class="token punctuation">,</span>        <span class="token string">'opponent'</span><span class="token punctuation">:</span> <span class="token string">'random'</span><span class="token punctuation">,</span>        <span class="token string">'observation_type'</span><span class="token punctuation">:</span> <span class="token string">'numpy3c'</span><span class="token punctuation">,</span>        <span class="token string">'illegal_move_mode'</span><span class="token punctuation">:</span> <span class="token string">'lose'</span><span class="token punctuation">,</span>        <span class="token string">'board_size'</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">)</span></code></pre><ol start="5"><li>Install <a href="https://github.com/openai/pachi-py" target="_blank" rel="noopener">pachi-py</a> via <code>pip install pachi-py</code> for go env.</li></ol><p>Then it’s all set to use the board game environment.</p><p>All in all, Gym is built for testing reinforcement learning, and the reinforcement learning gains fames from the DeepMind AlphaGo. Personally, removing Go env from Gym is not a smart move for marketing.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Since Gym 0.9.6, the board games environment has been removed from the default package as they are not maintained by OpenAI [&lt;a href=&quot;https://github.com/openai/gym/releases/tag/v0.9.6&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ref&lt;/a&gt;].
This article helps who would like to run their AI on Go or Hex in OpenAI Gym.&lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="https://en.abnerchou.me/categories/AI/"/>
    
    
      <category term="OpenAI" scheme="https://en.abnerchou.me/tags/OpenAI/"/>
    
      <category term="Gym" scheme="https://en.abnerchou.me/tags/Gym/"/>
    
      <category term="Board Games" scheme="https://en.abnerchou.me/tags/Board-Games/"/>
    
      <category term="Go" scheme="https://en.abnerchou.me/tags/Go/"/>
    
      <category term="Hex" scheme="https://en.abnerchou.me/tags/Hex/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode VS EPI</title>
    <link href="https://en.abnerchou.me/Blog/1d6c1157/"/>
    <id>https://en.abnerchou.me/Blog/1d6c1157/</id>
    <published>2018-07-19T00:41:21.000Z</published>
    <updated>2019-11-09T18:00:49.085Z</updated>
    
    <content type="html"><![CDATA[<p><strong> This article is still work in progress. </strong></p><p>Here is a list of problems which both on Leetcode and EPI<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. In my opinion, these common appeared questions are more important. Hope this could help job seekers to prepare for their final interviews.</p><a id="more"></a><table><thead><tr><th style="text-align:center">Leetcode<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></th><th style="text-align:center">EPI<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></th><th style="text-align:center">Difficulty<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></th><th style="text-align:center">Problem<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup></th><th style="text-align:center">Company<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup></th></tr></thead><tbody><tr><td style="text-align:center">21</td><td style="text-align:center">7.1</td><td style="text-align:center">Easy</td><td style="text-align:center">Merge Two Sorted Lists</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center">8.3</td><td style="text-align:center">Easy</td><td style="text-align:center">Valid Parentheses</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">6.1</td><td style="text-align:center">Medium</td><td style="text-align:center">String to Integer (atoi)</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">48</td><td style="text-align:center">5.19</td><td style="text-align:center">Medium</td><td style="text-align:center">Rotate Image</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">17.4</td><td style="text-align:center">Medium</td><td style="text-align:center">3-Sum</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">42</td><td style="text-align:center">24.32</td><td style="text-align:center">Hard</td><td style="text-align:center">Trapping Rain Water</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">121</td><td style="text-align:center">5.6</td><td style="text-align:center">Easy</td><td style="text-align:center">Best Time to Buy and Sell Stock</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">89</td><td style="text-align:center">15.10</td><td style="text-align:center">Medium</td><td style="text-align:center">Gray Code</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">235</td><td style="text-align:center">9.3</td><td style="text-align:center">Easy</td><td style="text-align:center">Lowest Common Ancestor of a Binary Search Tree</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">98</td><td style="text-align:center">14.1</td><td style="text-align:center">Medium</td><td style="text-align:center">Validate Binary Search Tree</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">141</td><td style="text-align:center">7.3</td><td style="text-align:center">Easy</td><td style="text-align:center">Linked List Cycle</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">240</td><td style="text-align:center">11.6</td><td style="text-align:center">Medium</td><td style="text-align:center">Search a 2D Matrix II</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">234</td><td style="text-align:center">7.11</td><td style="text-align:center">Easy</td><td style="text-align:center">Palindrome Linked List</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">215</td><td style="text-align:center">24.17</td><td style="text-align:center">Medium</td><td style="text-align:center">Kth Largest Element in an Array</td><td style="text-align:center">Amazon</td></tr><tr><td style="text-align:center">579</td><td style="text-align:center">13.12</td><td style="text-align:center">Hard</td><td style="text-align:center">Find Cumulative Salary of an Employee</td><td style="text-align:center">Amazon</td></tr></tbody></table><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">The book &quot;Elements of Programming Interviews&quot;. <a href="https://elementsofprogramminginterviews.com/" target="_blank" rel="noopener">https://elementsofprogramminginterviews.com/</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;">Problem index on Leetcode. <a href="https://leetcode.com/" target="_blank" rel="noopener">https://leetcode.com/</a></span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline-block; vertical-align: top;">Problem index on EPI.</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline-block; vertical-align: top;">The difficulty of the problem on Leetcode.</span><a href="#fnref:4" rev="footnote"> ↩</a></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">5.</span><span style="display: inline-block; vertical-align: top;">The problem title on Leetcode.</span><a href="#fnref:5" rev="footnote"> ↩</a></li><li id="fn:6"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">6.</span><span style="display: inline-block; vertical-align: top;">The company tags on Leetcode indicate the problem has appeared in their interview.</span><a href="#fnref:6" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; This article is still work in progress. &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here is a list of problems which both on Leetcode and EPI&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. In my opinion, these common appeared questions are more important. Hope this could help job seekers to prepare for their final interviews.&lt;/p&gt;
    
    </summary>
    
      <category term="Exam" scheme="https://en.abnerchou.me/categories/Exam/"/>
    
    
      <category term="Leetcode" scheme="https://en.abnerchou.me/tags/Leetcode/"/>
    
      <category term="EPI" scheme="https://en.abnerchou.me/tags/EPI/"/>
    
      <category term="Interview" scheme="https://en.abnerchou.me/tags/Interview/"/>
    
      <category term="Job" scheme="https://en.abnerchou.me/tags/Job/"/>
    
  </entry>
  
  <entry>
    <title>A Real Scenario Machine Learning Question</title>
    <link href="https://en.abnerchou.me/Blog/54a83d07/"/>
    <id>https://en.abnerchou.me/Blog/54a83d07/</id>
    <published>2018-06-18T23:13:10.000Z</published>
    <updated>2019-11-09T18:00:49.085Z</updated>
    
    <content type="html"><![CDATA[<p>Recently I got a real scenario machine learning question, which does not have existing models. I would like to record my thoughts here which may save my time later.</p><p>Here is the question:</p><blockquote><p>A company receives thousands of documents everyday uploaded by our users. Generally these documents are invoices or bills. We would like to extract the vendor​ and amount​ from these documents automatically (i.e. using software rather than human inspection).</p></blockquote><blockquote><p>They store the following pieces of information for each document:</p><ol><li>The pdf document uploaded by the user (please see example.pdf attached)</li><li>The text extracted from that pdf (please see example.txt attached - Note: often the extracted text would not be in an order that seems natural to a human reader)</li><li>Labels of what the vendor and amount should be for each document (in the attachedexample, vendor would be “Marketing Fuel Biz.”, and amount would be “747.50”).</li></ol></blockquote><blockquote><p>Question: Describe a machine learning solution to this problem.</p></blockquote><blockquote><p>Additon: Some percentage of the stored labels may be incorrect. What would you change to mitigate this problem.</p></blockquote><p>The sample pdf and OCR output txt is <a href="/asserts/ml-example.zip">downloadable</a>. </p><a id="more"></a><h2 id="Intuitive-Thoughts"><a href="#Intuitive-Thoughts" class="headerlink" title="Intuitive Thoughts"></a>Intuitive Thoughts</h2><p>As the OCR result loses the invoice position information (sample txt file), the traditional NLP methods, which expect sequential structure, would not work on such text corpus [<a href="https://www.diva-portal.org/smash/get/diva2:934351/FULLTEXT01.pdf" target="_blank" rel="noopener">1</a>]. So my proposed solution would focus on rebuilding the invoice structure information.</p><p>Based on my understanding, the invoice structure follows a certain pattern, such as the left top area is vendor logo/name and the total amount is in the bottom right. There are definitely some special cases, but the prior statement is an assumption of my solution.</p><p>In order to track the position in a PDF file (could be easily convert to an image file), the convolutional neural networks (CNN) [<a href="https://en.wikipedia.org/wiki/Convolutional_neural_network" target="_blank" rel="noopener">2</a>] could fit this task, it has been proved successfully on many image processing tasks [<a href="https://arxiv.org/abs/1504.08083" target="_blank" rel="noopener">3</a>, <a href="https://arxiv.org/abs/1506.01497" target="_blank" rel="noopener">4</a>, <a href="https://arxiv.org/abs/1703.06870" target="_blank" rel="noopener">5</a>]. Although a paper [<a href="https://arxiv.org/pdf/1708.07403.pdf" target="_blank" rel="noopener">6</a>] states to extract invoice info from the recurrent neural network (RNN), their input is words and positions (in our case, we do not have positions).  So I propose to use Faster R-CNN [<a href="https://arxiv.org/abs/1506.01497" target="_blank" rel="noopener">4</a>] or YOLO [<a href="https://pjreddie.com/darknet/yolo/" target="_blank" rel="noopener">7</a>] to solve the problem, they both are mature models of object detection and applied in many products.</p><p>The CNN model input should be images, and outputs are labels and region coordinate (the format would be like {vendor, 5, 15, 20, 40}).</p><p>Therefore, we need a dataset to train the CNN model. Since we already have the original PDF files and labels of vendor/amount, we could generate an image dataset for training the model. For each training entry, it contains an image converted from PDF and a region info of vendor/amount. The region info is the coordinate of two points which consist of a rectangle (e.g. (x1, y1) and (x2, y2) in figure 1). The dataset generation process could be done via a method of ORC and image process combination. The method is cropping the image into multiple rectangles (moving windows), then apply ORC on each rectangle. Based on the text outputs of rectangles, the area contains only vendor name is labeled as vendor, and the areas contain the amount are labeled as amount.</p><p><img src="/img/ml-questions-1.png" alt=""></p><p>After we have the dataset, we split it into training and testing datasets. The split ratio could be 80/20 [<a href="https://developers.google.com/machine-learning/crash-course/training-and-test-sets/splitting-data" target="_blank" rel="noopener">8</a>].</p><p>The evaluation metric is mean precision average (mPA) at the different intersection over union (IoU) thresholds. The IoU of a proposed set of object pixels and a set of true object pixels is calculated as IoU(A,B)=A∩B/A∪B (image below [<a href="https://www.pyimagesearch.com/2016/11/07/intersection-over-union-iou-for-object-detection/" target="_blank" rel="noopener">9</a>]). The metric sweeps over a range of IoU thresholds, at each point calculating an average precision value. The threshold values range from 0.5 to 0.95 with a step size of 0.05: (0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95). In other words, at a threshold of 0.5, a predicted object is considered a “hit” if its intersection over union with a ground truth object is greater than 0.5. At each threshold t, we can check if it “hit” on the ground truth. Then the mPA is 1/thresholds∑hit(t).</p><p><img src="/img/ml-questions-2.png" alt=""></p><p>When the model training finished (let’s assume it meets our expectation), we could apply a post process to convert the result to our label. We will get the region coordinate from the model output, and based on the coordinate, we can crop the rectangle and feed it to OCR. It is the final result. Then we can compare the predicated labels with our ground truth in the database to evaluate the model performance (the evaluation metric could be precision on both labels).</p><p>Here is the overview of the proposed solution:</p><pre><code>Convert PDF to Image -&gt; Dataset Preparation -&gt; CNN Model -&gt; OCR -&gt; Results</code></pre><p>To mitigate the impact of incorrect labels, we could add an extra step in dataset preparation. By calculating the frequency of each vendor label in the dataset, we could remove those entries with label frequency lower than a threshold. This is based on an assumption that incorrect labels cannot occur multiple times (the threshold) with the same value.</p><h3 id="Failure-on-the-Intuitive-Thoughts"><a href="#Failure-on-the-Intuitive-Thoughts" class="headerlink" title="Failure on the Intuitive Thoughts"></a>Failure on the Intuitive Thoughts</h3><p>I set up an experiment for the solution, which trained YOLOv3 [<a href="https://pjreddie.com/darknet/yolo/" target="_blank" rel="noopener">10</a>] (pre-trained on ImageNet [<a href="http://www.image-net.org/" target="_blank" rel="noopener">11</a>]) with 30 manually labeled invoices images (google searched images, each invoice contains vendor, logo, and amount labels). Although the predicated labels on validation dataset look promising, the mAP is almost zero on the test dataset. The reason for the low performance may be caused by the principle of CNN, the CNN only can learn the features that appear in the training set. The way to improve the model would be training on a larger dataset and assume it covers all test cases. Therefore, I would like to propose two new solutions for the ML question.</p><ol><li>Using the Recurrent Neural Network (RNN) with Long Short-Term Memory cells (LSTM) [<a href="https://en.wikipedia.org/wiki/Long_short-term_memory" target="_blank" rel="noopener">12</a>].</li><li>Using the Reinforcement Learning (RL) [<a href="https://en.wikipedia.org/wiki/Reinforcement_learning" target="_blank" rel="noopener">13</a>].</li></ol><h2 id="RNN"><a href="#RNN" class="headerlink" title="RNN"></a>RNN</h2><p>I reviewed the example.txt file, it doesn’t fully unorganized. We could recognize some patterns from it, like it reads column by column, not row by row as human do. Although RNN is good at the sequential data, due to the gradient vanishing problem, it won’t work for long sentence. So the LSTM method came up, bring the ability to memory long distance relationship to RNN. For example, “A cat jumps on the table, it breaks a cup, so we chase it off the table” which “it” represents the “cat” in the previous phrase. It may be easy to identify the first “it” as the cat because they are close, but for the second “it”, it’s hard to tell which it represents (cat, table, or cup).</p><p>As we are processing the text data, we need a preprocessing step to clean up. First, remove punctuation marks, like semi-colon, colon, exclamation mark, and etc. But keep the period and comma, because they may use in numbers. Second, tokenize the words, we could build up a vocabulary dictionary and convert each word into it represented the index in the dictionary. For unknown word and numbers, we use [UNK] and [NUM] instead. Finally, clear up the common words which do not help for our task, like the word “invoice”, it appears in every invoice.</p><p>Then we could feed the data to the RNN model. The RNN model supports many to many. Input is word sequence, and the output is the all possible labels for vendor/amount.</p><p>The evaluation metric would be the F1 measurement [<a href="https://en.wikipedia.org/wiki/F1_score" target="_blank" rel="noopener">14</a>], which combines the precision and recall.</p><h2 id="RL"><a href="#RL" class="headerlink" title="RL"></a>RL</h2><p>When AlphaGo [<a href="https://deepmind.com/research/alphago/" target="_blank" rel="noopener">15</a>] defeats the world champion Lee Sedol, reinforcement learning becomes a hot topic in AI domain. The reinforcement learning is an algorithm to make AI compete with AI, the best set of policies is searched out during the competition. It has successfully applied to robotics, game playing, fintech, and ect. [<a href="https://www.oreilly.com/ideas/practical-applications-of-reinforcement-learning-in-industry" target="_blank" rel="noopener">16</a>]</p><p>The reason I pick up the RL is the intuitive thought in my previous email. For a human, it is easy to identify vendor and amount by a glance, so the images contain all the info we need. Therefore, I think it is not necessary to take an extra step to convert the images to text, which lose information and create an extra layer to process. </p><p>So the idea is to find out the areas in invoice images which represent vendor and amount, then apply OCR against those areas to get final text formatted outputs.</p><p>Preprocess input documents to convert them into greyscale images.</p><p>Before we feed images into RL model, we need to set up rules for the agents, like identify the correct item plus points, identify the logo get some point, output wrong result get minus points. Then the RL model could brute force to find the best policies, like font size, bold style, and etc.</p><p>The RL model output should be the rectangle area of the vendor/amount. Then apply OCR to convert them to text.</p><p>The evaluation metric should be same as above, using the F1 score.</p><h2 id="More"><a href="#More" class="headerlink" title="More"></a>More</h2><p>In addition to the above methods, I also thought about the generative adversarial networks (GANs) [<a href="https://en.wikipedia.org/wiki/Generative_adversarial_network" target="_blank" rel="noopener">17</a>], but the tuning process is more like mystery comparing other models. Moreover, I found a paper [<a href="https://arxiv.org/abs/1801.09321" target="_blank" rel="noopener">18</a>] that using the deep CNN model to classify document images based their structure. In our case, I think we could use the similar approach to identify vendors, but we still need more info to retrieve the amounts.</p><p>BTW, besides the machine learning models, I wonder we also could improve the OCR to include the structure information in the output, like the PDF to HTML [<a href="https://arxiv.org/abs/1801.09321" target="_blank" rel="noopener">18</a>] and Zonal OCR [<a href="https://docparser.com/blog/zonal-ocr/" target="_blank" rel="noopener">19</a>]. If the company mainly deal with PDF files. As the PDF format specification [<a href="https://www.adobe.com/content/dam/acom/en/devnet/pdf/pdfs/PDF32000_2008.pdf" target="_blank" rel="noopener">20</a>] is open to the public, we could analysis PDF files directly, this would be another story.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Recently I got a real scenario machine learning question, which does not have existing models. I would like to record my thoughts here which may save my time later.&lt;/p&gt;
&lt;p&gt;Here is the question:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A company receives thousands of documents everyday uploaded by our users. Generally these documents are invoices or bills. We would like to extract the vendor​ and amount​ from these documents automatically (i.e. using software rather than human inspection).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;They store the following pieces of information for each document:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The pdf document uploaded by the user (please see example.pdf attached)&lt;/li&gt;
&lt;li&gt;The text extracted from that pdf (please see example.txt attached - Note: often the extracted text would not be in an order that seems natural to a human reader)&lt;/li&gt;
&lt;li&gt;Labels of what the vendor and amount should be for each document (in the attached
example, vendor would be “Marketing Fuel Biz.”, and amount would be “747.50”).&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Question: Describe a machine learning solution to this problem.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Additon: Some percentage of the stored labels may be incorrect. What would you change to mitigate this problem.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The sample pdf and OCR output txt is &lt;a href=&quot;/asserts/ml-example.zip&quot;&gt;downloadable&lt;/a&gt;. &lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="https://en.abnerchou.me/categories/AI/"/>
    
    
      <category term="Machine Learning" scheme="https://en.abnerchou.me/tags/Machine-Learning/"/>
    
      <category term="OCR" scheme="https://en.abnerchou.me/tags/OCR/"/>
    
      <category term="RNN" scheme="https://en.abnerchou.me/tags/RNN/"/>
    
      <category term="CNN" scheme="https://en.abnerchou.me/tags/CNN/"/>
    
      <category term="NLP" scheme="https://en.abnerchou.me/tags/NLP/"/>
    
      <category term="natural language processing" scheme="https://en.abnerchou.me/tags/natural-language-processing/"/>
    
      <category term="convolutional neural network" scheme="https://en.abnerchou.me/tags/convolutional-neural-network/"/>
    
      <category term="recurrent neural network" scheme="https://en.abnerchou.me/tags/recurrent-neural-network/"/>
    
      <category term="optical character recognition" scheme="https://en.abnerchou.me/tags/optical-character-recognition/"/>
    
  </entry>
  
  <entry>
    <title>DIY SLI Liquid Cooling GPU Computer</title>
    <link href="https://en.abnerchou.me/Blog/31404856/"/>
    <id>https://en.abnerchou.me/Blog/31404856/</id>
    <published>2017-08-10T13:54:35.000Z</published>
    <updated>2019-11-09T18:00:49.085Z</updated>
    
    <content type="html"><![CDATA[<p>It’s kind of shame to say, as a computer science major professional, I have never build my own desktop computer ever, until recent. All because the old desktop dead (purchased 2012), I finally made the decision to DIY a powerful amateur deep learning machine.</p><p>Here I will record all the pitfalls, caveats, and tricks during the building processes. Hope could provide some help or hint for people would like to build their dream game (or amateur machine learning) machine.</p><a id="more"></a><p>Here is the <a href="https://ca.pcpartpicker.com/user/AbnerChou/saved/6zvgsY" target="_blank" rel="noopener">components list</a> for my build on PCPartPicker. The currency is Canadian Dollar since I’m living in the cold North (but don’t have the wall of cause). </p><table><thead><tr><th style="text-align:center">Parts</th><th style="text-align:left">Brand</th><th style="text-align:center">Purchase Price</th><th style="text-align:left">Comment</th></tr></thead><tbody><tr><td style="text-align:center">CPU</td><td style="text-align:left">Inter Core i7-7700K 4.2Ghz Quad-Core</td><td style="text-align:center">$427.95</td><td style="text-align:left">From Memory Express.</td></tr><tr><td style="text-align:center">GPU</td><td style="text-align:left">2 X MSI GeForce 1080 DirectX 12 GTX SEA HAWK</td><td style="text-align:center">$732.99 X 2</td><td style="text-align:left">From NewEgg. Got total $40 mail-in rebates</td></tr><tr><td style="text-align:center">CPU Cooling</td><td style="text-align:left">Corsair H100i v2 Hydro Liquid CPU Cooler</td><td style="text-align:center">$124.99</td><td style="text-align:left">From Memory Express</td></tr><tr><td style="text-align:center">Motherboard</td><td style="text-align:left">ASUS PRIME Z270-A LGA 1151</td><td style="text-align:center">$199.99</td><td style="text-align:left">From NewEgg</td></tr><tr><td style="text-align:center">Disk</td><td style="text-align:left">Kingston SSD A400 480GB</td><td style="text-align:center">$194.10</td><td style="text-align:left">From Memory Express</td></tr><tr><td style="text-align:center">Memory</td><td style="text-align:left">Kingston HyperX Fury 32GB DDR4 2666MHZ 4X8GB</td><td style="text-align:center">$269.99</td><td style="text-align:left">From Memory Express</td></tr><tr><td style="text-align:center">Case</td><td style="text-align:left">Fractal Design Define S ATX Mid Tower Window Case</td><td style="text-align:center">$89.99</td><td style="text-align:left">From Canada Computers</td></tr><tr><td style="text-align:center">Power</td><td style="text-align:left">EVGA SuperNOVA 750W G2L Modular PSU</td><td style="text-align:center">$139.99</td><td style="text-align:left">From Memory Express</td></tr><tr><td style="text-align:center">Extra</td><td style="text-align:left">Asus USB-AC51 Dual-Band Wireless AC600 Wireless Adapter</td><td style="text-align:center">$39.99</td><td style="text-align:left">From Memory Express. Got $10 mail-in rebates</td></tr></tbody></table><h2 id="Purchase-items"><a href="#Purchase-items" class="headerlink" title="Purchase items"></a>Purchase items</h2><p>I have spent about a month to collect all parts. The reason why it took so long is I would lik to get the price as cheaper as possible. To ensure that, I have developed several “techniques”.</p><blockquote><p>The tricks use here are suitable for Canada or best North America, because these online services/stores are only shipping within North America or Canada only. However, you could definitely find alternatives within your regions/countries (check out <a href="https://pcpartpicker.com/" target="_blank" rel="noopener">PCPartPicker</a> support countries).</p></blockquote><p><img src="/img/diy_pc_1.jpg" alt="Before Open Box"></p><p>First of all, don’t forget using <a href="https://www.ebates.ca" target="_blank" rel="noopener">ebates</a>. It’s a online rebate website, user could get instant rebate if purchase through the ebates supported vendors online. The rebate rate is from 1% to 5%. Although not much, better than nothing.</p><p>Second, use price matching. Many online store support price matching, some even give 10% more off (I only found one). The <a href="https://www.memoryexpress.com/" target="_blank" rel="noopener">Memory Express</a> is one of my favorite computer component online shop. It provides the lowest prices most of the time, moreover, its price match is better – match the price plus 10% off on the difference. E.g, a CPU costs $500 on ME, another store has lower price for the same CPU, let’s say it $400, then the price on ME after the price match is 400-(500-400)*10% = $390. The only con shopping on ME is they charge shipping fee and don’t have local store in east Canada.</p><p>As mentioned above, the shipping fee may also cost a lot, especially the item weight increases. So if online store has physical store, use pick up wisely. I have purchased several parts on <a href="http://http://www.ncix.com/" target="_blank" rel="noopener">NCIX</a> and <a href="http://www.canadacomputers.com" target="_blank" rel="noopener">Canada Computer</a> just to save the shipping fee. Even more, both also provide price match, which make them more affordable.</p><p>Amazon also has great deals eventually, but due to the currency exchange rate Amazon Canada alway have match higher price regardless of the physical distant is so close. Therefore, using Amazon US is also a good option if living near the boarder. Sometime, even including the import fee purchasing from Amazon US, the price is still cheaper than in Canada. What a life Canadian is!</p><p>Finally, wait holiday or promotional events. Especially Boxing day, you could get the best price. However, normally the quantity are limit. One of my friends bought he loved GPU by lining up at 5am in front of the store.</p><h2 id="Build-up"><a href="#Build-up" class="headerlink" title="Build up"></a>Build up</h2><p>It is usually easy to assembly the parts (just follow the manual), however, my build is a little bit special that have three radiators – one for CPU, two for GPU. Not many people using dual GPU with AIO liquid radiators, which makes there is no much info online to help me choose the right case.  </p><p>After googling, I conclude the Define S could be the best fit for my needs. But I was only half right. Define S is well designed for water cooling system, and beautiful out look. I’m definitely satisfied with the choice. However, the case is a little bit wider to put the GPU AIO radiator on the front panel.</p><p><img src="/img/diy_pc_3.jpg" alt="Building the pc"></p><p>As the above pic shows, I have no options to put the radiator into the tiny space beside PSU. Here is the part I love Define S, it supports the bottom fan and saves my day. Otherwise, I would have to disassemble all parts and exchange another case, then do it again.</p><p>At the bottom front panel, another fan is installed to pull air in to provide positive air pressure. The air flow inside the case illustrates in the following pic:</p><p><img src="/img/diy_pc_4.jpg" alt="Airflow in PC case"></p><h2 id="All-in-all"><a href="#All-in-all" class="headerlink" title="All in all"></a>All in all</h2><p>After a day and a night, the PC finally up and run. Here is some conclusions I learned:</p><ol><li>Patient while purchasing. There is alway a deal waiting to be discovered. However, the price also could infinitely low, watch the history price, it only could be at the lowest at a certain point, after that the price remain the normal or the item discontinued.</li><li>Case is as important as GPU and CPU. A good case can save a day.</li><li>Modular PSU is clean and simple. My build could become true is not only because the case is great, but also the modular PSU save much space for the radiator.</li></ol><p>Here is the complete shot:</p><p><img src="/img/diy_pc_2.jpg" alt="Completed PC"> </p><p><strong>Update(2017-Aug-14)</strong>: I also bought an M.2 SSD to install the Ubuntu OS, as the most machine learning algorithms are build upon Linux system. Moreover, the driver officially provided for the Asus USB-AC51 is not compatible for Ubuntu 16.04 LTS (I also tried several customized drivers, they may fit the 14.04 LTS but not the 16.04). So be careful when purchase the USB Wifi adapter, here is a <a href="http://willhaley.com/blog/linux-16-04-1-usb-wifi-adapters/" target="_blank" rel="noopener">list</a> that has some “work out of box” USB for Ubuntu 16.04 and above.</p><p><strong>Update(2019-Jun-24)</strong>: Recently bought another M.2 SSD for share disk between Ubuntu and Windows. Due to recently SSD price drop, the 960G SSD only cost $150 (included tax). Even cheaper and faster than 500G SATA SSD I bought 2 years ago. How technology changes so fast! To mount the new SSD in Ubuntu, I followed the top answer in the StackOverflow <a href="https://askubuntu.com/a/125277" target="_blank" rel="noopener">post</a>.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;It’s kind of shame to say, as a computer science major professional, I have never build my own desktop computer ever, until recent. All because the old desktop dead (purchased 2012), I finally made the decision to DIY a powerful amateur deep learning machine.&lt;/p&gt;
&lt;p&gt;Here I will record all the pitfalls, caveats, and tricks during the building processes. Hope could provide some help or hint for people would like to build their dream game (or amateur machine learning) machine.&lt;/p&gt;
    
    </summary>
    
      <category term="DIY" scheme="https://en.abnerchou.me/categories/DIY/"/>
    
    
      <category term="SLI" scheme="https://en.abnerchou.me/tags/SLI/"/>
    
      <category term="Water Cooling" scheme="https://en.abnerchou.me/tags/Water-Cooling/"/>
    
      <category term="Deep Learning" scheme="https://en.abnerchou.me/tags/Deep-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Auto Sync Github Forked Repos</title>
    <link href="https://en.abnerchou.me/Blog/562ef8f1/"/>
    <id>https://en.abnerchou.me/Blog/562ef8f1/</id>
    <published>2017-07-22T22:32:53.000Z</published>
    <updated>2019-11-09T18:00:49.085Z</updated>
    
    <content type="html"><![CDATA[<p>As a Github heavy user, when I saw an interested repos, I would fork them to my “secret” organization to read/use in future. However, when checked them later, most of the time (99%), the repos have already out of synced. There are three options I normally choose:</p><ol><li>delete the forked repo and re-fork;</li><li>manually merge to the latest commit;</li><li>use the PR and switch the source and destination (<a href="https://stackoverflow.com/a/23853061" target="_blank" rel="noopener">ref</a>).</li></ol><a id="more"></a><p>Although those three options works like a “charm” in a small amount of repos, it’s more like chores when maintaining hundreds forked repos.</p><h3 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR"></a>TL;DR</h3><p>Then I came up the idea to use Travis-CI to sync those repos automatically. The mechanism is simple and straightforward, which runs a script periodically to update forked repos with source repos. The script could be bash, javascript, python, or any language which could call git command in the Linux OS.</p><h3 id="My-Approach"><a href="#My-Approach" class="headerlink" title="My Approach"></a>My Approach</h3><p>Based on the above idea, I wrote a <a href="https://github.com/NoahDragon/update-forked-repo" target="_blank" rel="noopener">js script</a> to do the job. But this script is only a solution my problems:</p><ul><li>Only works on forked repos in a Github Org.</li><li>Forked repos should never be modified. </li><li>User Github personal token to access.</li><li>Not support private repos.</li></ul><p>If your needs also match the aboves, then simple fork my script, and modify the <code>org</code> in <code>.config.yml</code>.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;As a Github heavy user, when I saw an interested repos, I would fork them to my “secret” organization to read/use in future. However, when checked them later, most of the time (99%), the repos have already out of synced. There are three options I normally choose:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;delete the forked repo and re-fork;&lt;/li&gt;
&lt;li&gt;manually merge to the latest commit;&lt;/li&gt;
&lt;li&gt;use the PR and switch the source and destination (&lt;a href=&quot;https://stackoverflow.com/a/23853061&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ref&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="DevOps" scheme="https://en.abnerchou.me/categories/DevOps/"/>
    
    
      <category term="travis-ci" scheme="https://en.abnerchou.me/tags/travis-ci/"/>
    
      <category term="Github" scheme="https://en.abnerchou.me/tags/Github/"/>
    
      <category term="nodejs" scheme="https://en.abnerchou.me/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Build SSL HTTPS Website Using Docker</title>
    <link href="https://en.abnerchou.me/Blog/75027340/"/>
    <id>https://en.abnerchou.me/Blog/75027340/</id>
    <published>2016-11-18T22:35:10.000Z</published>
    <updated>2019-11-09T18:00:49.085Z</updated>
    
    <content type="html"><![CDATA[<p><img src="\img\https.png" alt="https"></p><p>When you’re visiting my website, you may not see the https in the URL, which means you have been directed to a CDN node other than my VPS server. This doesn’t mean the method doesn’t work. Anyway, let’s begin the talk.</p><p>The purpose of this post is to help people to avoid the pitfalls that I encountered, and severs as a note for future reference.</p><a id="more"></a><h3 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h3><ul><li>All my setup is on Ubuntu 16.04, and may not suitable for other version/OS.</li><li><a href="https://docs.docker.com/engine/installation/" target="_blank" rel="noopener">Docker</a> must be installed and properly functioning.</li><li><a href="https://docs.docker.com/compose/install/" target="_blank" rel="noopener">Docker compose</a> is an option, but this article only showing the method that is using docker compose, which is simpler than using docker alone.</li><li>Any machine/VPS/cloud server that you have root control, like <a href="https://m.do.co/c/eaf9c533bc55" target="_blank" rel="noopener">Digital Ocean</a>[Get $10 with coupon code <code>ACTIVATE10</code>], <a href="http://www.vultr.com/?ref=7025798" target="_blank" rel="noopener">Vultr</a>[Get $50 (expired after 6 months) with coupon code <code>DOMORE</code> ], <a href="https://www.linode.com/?r=31b7ad9bbcdac84ed780e48344212c99afcaa3d2" target="_blank" rel="noopener">Lindo</a>[Get $20 with coupon code <code>PodcastInIt20</code>], and etc.</li><li>DNS already points to your machine, and all domains which would like to support Https also have CNAME or A record.</li><li>Git is also an option, unless you would like to build the image on your own.</li></ul><h3 id="Set-Up"><a href="#Set-Up" class="headerlink" title="Set Up"></a>Set Up</h3><p>Only two docker images are used:</p><ul><li><a href="https://github.com/bringnow/docker-letsencrypt-manager" target="_blank" rel="noopener">Docker-letsencrypt-manager</a></li><li><a href="https://github.com/bringnow/docker-nginx-letsencrypt" target="_blank" rel="noopener">Docker-nginx-letsencrypt</a></li></ul><p>The niginx server has to start up before running the letsencrypt, because the letsencrypt needs to access the server to finish the generating certificate process.</p><h4 id="docker-compose-yml-for-nignx"><a href="#docker-compose-yml-for-nignx" class="headerlink" title="docker-compose.yml for nignx"></a>docker-compose.yml for nignx</h4><p>Create <code>docker-compose.yml</code> and paste the following into it.</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">nginx</span><span class="token punctuation">:</span>  <span class="token key atrule">image</span><span class="token punctuation">:</span> bringnow/nginx<span class="token punctuation">-</span>letsencrypt  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ./nginx.conf<span class="token punctuation">:</span>/etc/nginx/nginx.conf    <span class="token punctuation">-</span> /etc/letsencrypt<span class="token punctuation">:</span>/etc/letsencrypt    <span class="token punctuation">-</span> /var/acme<span class="token punctuation">-</span>webroot<span class="token punctuation">:</span>/var/acme<span class="token punctuation">-</span>webroot    <span class="token punctuation">-</span> /srv/docker/nginx/dhparam<span class="token punctuation">:</span>/etc/nginx/dhparam  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token string">"80:80"</span>    <span class="token punctuation">-</span> <span class="token string">"443:443"</span>  <span class="token key atrule">net</span><span class="token punctuation">:</span> <span class="token string">"host"</span>  <span class="token key atrule">dns_search</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token string">"example.com"</span></code></pre><p>Modify it accordingly to fit your environment.</p><h4 id="Generate-dhparam"><a href="#Generate-dhparam" class="headerlink" title="Generate dhparam"></a>Generate dhparam</h4><p>Although the nginx docker will create DH parameters on initial start up, it is time comsuming to generate the 4096 bit DH parameters (more than an hour on my VPS). Run the following command and copy the generated file to the <code>/srv/docker/nginx/dhparam</code> folder (set in docker-compose.yml).</p><pre class=" language-bash"><code class="language-bash">openssl dhparam -out RSA4096.pem -5 4096</code></pre><h4 id="Create-Nginx-Config-file"><a href="#Create-Nginx-Config-file" class="headerlink" title="Create Nginx Config file"></a>Create Nginx Config file</h4><p>In order to complete the letsencrypt challenge, the server has to open the 80 port. The nginx-letsencrypt image already come with the setting snippets: <code>snippets/letsencryptauth.conf</code> and <code>snippets/sslconfig.conf</code>.</p><p>Here is the sample config file:</p><pre class=" language-nginx"><code class="language-nginx"><span class="token keyword">events</span> <span class="token punctuation">{</span>  <span class="token keyword">worker_connections</span> <span class="token number">1024</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">http</span> <span class="token punctuation">{</span>  <span class="token keyword">include</span> snippets<span class="token operator">/</span>letsencryptauth<span class="token punctuation">.</span>conf<span class="token punctuation">;</span>  <span class="token keyword">include</span> snippets<span class="token operator">/</span>sslconfig<span class="token punctuation">.</span>conf<span class="token punctuation">;</span>  <span class="token keyword">server</span> <span class="token punctuation">{</span>    <span class="token keyword">listen</span> <span class="token number">443</span> <span class="token keyword">ssl</span> default_server<span class="token punctuation">;</span>    <span class="token keyword">server_name</span> example<span class="token punctuation">.</span>com www<span class="token punctuation">.</span>example<span class="token punctuation">.</span>com    <span class="token keyword">ssl_certificate</span> <span class="token operator">/</span>etc<span class="token operator">/</span>letsencrypt<span class="token operator">/</span>live<span class="token operator">/</span>www<span class="token punctuation">.</span>example<span class="token punctuation">.</span>com<span class="token operator">/</span>fullchain<span class="token punctuation">.</span>pem<span class="token punctuation">;</span>    <span class="token keyword">ssl_certificate_key</span> <span class="token operator">/</span>etc<span class="token operator">/</span>letsencrypt<span class="token operator">/</span>live<span class="token operator">/</span>www<span class="token punctuation">.</span>example<span class="token punctuation">.</span>com<span class="token operator">/</span>privkey<span class="token punctuation">.</span>pem<span class="token punctuation">;</span>    <span class="token keyword">add_header</span> Strict<span class="token operator">-</span>Transport<span class="token operator">-</span>Security <span class="token string">"max-age=31536000; includeSubdomains"</span> always<span class="token punctuation">;</span>    <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true"># Just return a blank response</span>      <span class="token keyword">return</span> <span class="token number">200</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><strong>NOTE</strong>: Please comment out those two lines start up ssl_certificate before the certificate generated.</p><h4 id="Make-Nginx-Online"><a href="#Make-Nginx-Online" class="headerlink" title="Make Nginx Online"></a>Make Nginx Online</h4><p>Now run the following command to bring Nginx online:</p><pre class=" language-bash"><code class="language-bash">docker-compose up -d</code></pre><p>To confim if the docker is running correctly, we could look the log file to check:</p><pre class=" language-bash"><code class="language-bash">docker-compose logs</code></pre><p>If there are some error messages, please check the Nginx config file and restart the docker.</p><h4 id="docker-compose-yml-for-letsencrypt"><a href="#docker-compose-yml-for-letsencrypt" class="headerlink" title="docker-compose.yml for letsencrypt"></a>docker-compose.yml for letsencrypt</h4><p>In another folder, create a docker-compose.yml:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">cli</span><span class="token punctuation">:</span>  <span class="token key atrule">image</span><span class="token punctuation">:</span> bringnow/letsencrypt<span class="token punctuation">-</span>manager<span class="token punctuation">:</span>latest  <span class="token key atrule">env_file</span><span class="token punctuation">:</span> config.env  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> /etc/letsencrypt<span class="token punctuation">:</span>/etc/letsencrypt    <span class="token punctuation">-</span> /var/lib/letsencrypt<span class="token punctuation">:</span>/var/lib/letsencrypt    <span class="token punctuation">-</span> /var/acme<span class="token punctuation">-</span>webroot<span class="token punctuation">:</span>/var/acme<span class="token punctuation">-</span>webroot<span class="token key atrule">cron</span><span class="token punctuation">:</span>  <span class="token key atrule">image</span><span class="token punctuation">:</span> bringnow/letsencrypt<span class="token punctuation">-</span>manager<span class="token punctuation">:</span>latest  <span class="token key atrule">env_file</span><span class="token punctuation">:</span> config.env  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> /etc/letsencrypt<span class="token punctuation">:</span>/etc/letsencrypt    <span class="token punctuation">-</span> /var/lib/letsencrypt<span class="token punctuation">:</span>/var/lib/letsencrypt    <span class="token punctuation">-</span> /var/acme<span class="token punctuation">-</span>webroot<span class="token punctuation">:</span>/var/acme<span class="token punctuation">-</span>webroot  <span class="token key atrule">command</span><span class="token punctuation">:</span> cron<span class="token punctuation">-</span>auto<span class="token punctuation">-</span>renewal  <span class="token key atrule">restart</span><span class="token punctuation">:</span> always</code></pre><p>Modify it accordingly. Make sure the folder <code>/var/lib/letsencrypt</code> and <code>/var/acme-webroot</code> have created and exist.</p><p>Then create config.env file in the same folder and input your email:</p><pre class=" language-bash"><code class="language-bash">LE_EMAIL<span class="token operator">=</span>LE_RSA_KEY_SIZE<span class="token operator">=</span>4096</code></pre><h4 id="Generate-SSL-Certificate"><a href="#Generate-SSL-Certificate" class="headerlink" title="Generate SSL Certificate"></a>Generate SSL Certificate</h4><p>Finally, we could create our Https certificate. Run the commands:</p><pre class=" language-bash"><code class="language-bash">docker-compose run cli add <span class="token operator">&lt;</span>domain<span class="token operator">></span> <span class="token punctuation">[</span>alternative domains<span class="token punctuation">]</span></code></pre><p>If it fails, please check if Nginx is runing and the DNS setting is correct.</p><p><strong>NOTE</strong>: If the certificate generate, don’t forget to remove comment on ssl_certificate lines in Nginx config file, and restart it.</p><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>Now your website should up and running with https. Enjoy.</p><p>~ EOF ~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;\img\https.png&quot; alt=&quot;https&quot;&gt;&lt;/p&gt;
&lt;p&gt;When you’re visiting my website, you may not see the https in the URL, which means you have been directed to a CDN node other than my VPS server. This doesn’t mean the method doesn’t work. Anyway, let’s begin the talk.&lt;/p&gt;
&lt;p&gt;The purpose of this post is to help people to avoid the pitfalls that I encountered, and severs as a note for future reference.&lt;/p&gt;
    
    </summary>
    
      <category term="DevOps" scheme="https://en.abnerchou.me/categories/DevOps/"/>
    
    
      <category term="HTTPS" scheme="https://en.abnerchou.me/tags/HTTPS/"/>
    
      <category term="SSL" scheme="https://en.abnerchou.me/tags/SSL/"/>
    
      <category term="Nginx" scheme="https://en.abnerchou.me/tags/Nginx/"/>
    
      <category term="Docker" scheme="https://en.abnerchou.me/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Top 10 Popular Themes</title>
    <link href="https://en.abnerchou.me/Blog/5c00ca67/"/>
    <id>https://en.abnerchou.me/Blog/5c00ca67/</id>
    <published>2016-10-16T19:41:21.000Z</published>
    <updated>2019-11-09T18:00:49.085Z</updated>
    
    <content type="html"><![CDATA[<p><img src="\img\hexo-logo.png" alt=""></p><p><a href="https://hexo.io/" target="_blank" rel="noopener">Hexojs</a> is one of the most popular static site generator based on <a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs</a> [<a href="https://www.staticgen.com/" target="_blank" rel="noopener">ref</a>].</p><p>There are around 75 themes list on the <a href="https://hexo.io/themes/" target="_blank" rel="noopener">website</a>, here is the top 10 popular ones. </p><a id="more"></a><h2 id="NexT"><a href="#NexT" class="headerlink" title=" NexT"></a><img class="nofancybox" src="/img/top1.png" style="display: inline; border-style: none;"> NexT</h2><div style="text-align:center">  <div class="github-card" data-user="iissnan" data-repo="hexo-theme-next" data-width="400" data-theme="medium" data-target="" data-client-id="" data-client-secret=""></div></div><script src="/github-card-lib/githubcard.js"></script><p>#responsive  #one_column  #clean  #white</p><h2 id="Yilia"><a href="#Yilia" class="headerlink" title=" Yilia"></a><img class="nofancybox" src="/img/top2.png" style="display: inline; border-style: none;"> Yilia</h2><div style="text-align:center">  <div class="github-card" data-user="litten" data-repo="hexo-theme-yilia" data-width="400" data-theme="medium" data-target="" data-client-id="" data-client-secret=""></div></div><script src="/github-card-lib/githubcard.js"></script><p>#responsive  #elegant  #sidebar  #two_column  #one_column</p><h2 id="Material"><a href="#Material" class="headerlink" title=" Material"></a><img class="nofancybox" src="/img/top3.png" style="display: inline; border-style: none;"> Material</h2><div style="text-align:center">  <div class="github-card" data-user="viosey" data-repo="hexo-theme-material" data-width="400" data-theme="medium" data-target="" data-client-id="" data-client-secret=""></div></div><script src="/github-card-lib/githubcard.js"></script><p>#responsive  #simple  #material_design  #blog  #multi_styles  #minimalism  #i18n  #elegant  #material  #one_column</p><h2 id="Tranquilpeek"><a href="#Tranquilpeek" class="headerlink" title="Tranquilpeek"></a>Tranquilpeek</h2><div style="text-align:center">  <div class="github-card" data-user="LouisBarranqueiro" data-repo="tranquilpeak-hexo-theme" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div></div><script src="/github-card-lib/githubcard.js"></script><p>#responsive  #gorgeous  #sidebar  #two_column  #one_column  #tag_plugins</p><h2 id="Maupassant"><a href="#Maupassant" class="headerlink" title="Maupassant"></a>Maupassant</h2><div style="text-align:center">  <div class="github-card" data-user="tufu9441" data-repo="maupassant-hexo" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div></div><script src="/github-card-lib/githubcard.js"></script><p>#simple  #responsive  #two_column  #white  #jade  #scss</p><h2 id="Yelee"><a href="#Yelee" class="headerlink" title="Yelee"></a>Yelee</h2><div style="text-align:center">  <div class="github-card" data-user="MOxFIVE" data-repo="hexo-theme-yelee" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div></div><script src="/github-card-lib/githubcard.js"></script><p>#responsive  #two_column  #toc  #elegant  #simple  #background_image</p><h2 id="Apollo"><a href="#Apollo" class="headerlink" title="Apollo"></a>Apollo</h2><div style="text-align:center">  <div class="github-card" data-user="pinggod" data-repo="hexo-theme-apollo" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div></div><script src="/github-card-lib/githubcard.js"></script><p>#chinese  #light</p><h2 id="Icarus"><a href="#Icarus" class="headerlink" title="Icarus"></a>Icarus</h2><div style="text-align:center">  <div class="github-card" data-user="ppoffice" data-repo="hexo-theme-icarus" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div></div><script src="/github-card-lib/githubcard.js"></script><p>#responsive  #three_column  #clean  #flat  #light</p><h2 id="Jacman"><a href="#Jacman" class="headerlink" title="Jacman"></a>Jacman</h2><div style="text-align:center">  <div class="github-card" data-user="wuchong" data-repo="jacman" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div></div><script src="/github-card-lib/githubcard.js"></script> <p>#responsive  #two_column  #blue  #elegant</p><h2 id="Fexo"><a href="#Fexo" class="headerlink" title="Fexo"></a>Fexo</h2><div style="text-align:center">  <div class="github-card" data-user="forsigner" data-repo="fexo" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div></div><script src="/github-card-lib/githubcard.js"></script><p>#responsive #simple #elegant</p><p>~ EOF ~</p><p>Updated: 2016-Dec-06</p><p>For real time rank please visit the following link: <a href="https://github.com/search?o=desc&amp;q=hexo-theme&amp;s=stars&amp;type=Repositories&amp;utf8=%E2%9C%93" target="_blank" rel="noopener">Github Search</a></p><p>Updated: 2017-Apr-17</p><p>The material theme is really a black sheep. It jumps from #9 to #3 since last update, and it even didn’t exist when this post created.</p><p>Here is a performance compare among top three Hexo themes (this may explain why material is so popular):</p><p><img src="/img/top-theme-compare.jpg" alt="Material NexT Yilia Performance"></p><p>Image from <a href="http://weibo.com/645030234?refer_flag=1005055010_&amp;is_hot=1" target="_blank" rel="noopener">Weibo</a>.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;\img\hexo-logo.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexojs&lt;/a&gt; is one of the most popular static site generator based on &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;nodejs&lt;/a&gt; [&lt;a href=&quot;https://www.staticgen.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ref&lt;/a&gt;].&lt;/p&gt;
&lt;p&gt;There are around 75 themes list on the &lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;website&lt;/a&gt;, here is the top 10 popular ones. &lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://en.abnerchou.me/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="https://en.abnerchou.me/tags/Hexo/"/>
    
      <category term="Theme" scheme="https://en.abnerchou.me/tags/Theme/"/>
    
      <category term="Blog" scheme="https://en.abnerchou.me/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Goodby Microsoft TechReward</title>
    <link href="https://en.abnerchou.me/Blog/8aae6eef/"/>
    <id>https://en.abnerchou.me/Blog/8aae6eef/</id>
    <published>2016-10-06T17:31:44.000Z</published>
    <updated>2019-11-09T18:00:49.085Z</updated>
    
    <content type="html"><![CDATA[<p><img src="\img\ms_tech_reward.jpg" alt=""></p><p>The Microsoft TechRewards Program will close on January 6, 2017. (<a href="https://rewards.msdn.microsoft.com/en-us/signin" target="_blank" rel="noopener">ref</a>) All challenges have cleaned up now (Oct-06-2016).</p><p>Really don’t have any hard feeling about this. The only reward attracted me was the AppToCerts, which rewarded you the MS certificate if passed two challenges. Other than it, to achieve a $2 reward, you have to complete at least 3 challenges, and the rewards are all donations.</p><p>So here I will list the reasons why I think it is going to fail:</p><a id="more"></a><h3 id="Low-Profit-Rewards"><a href="#Low-Profit-Rewards" class="headerlink" title="Low Profit Rewards"></a>Low Profit Rewards</h3><p>For some usable rewards, like Skype credit, you have to complete more than 10 challenges, and each challenges takes around half hour to finish. Five hours for a $25 USD, it even not matches the basic salaries.</p><h3 id="Outdated-instruction"><a href="#Outdated-instruction" class="headerlink" title="Outdated instruction"></a>Outdated instruction</h3><p>I followed instruction to complete a challenge, which takes around an hour to fix an issue because of the wrong description. The challenge is re-listed each month, but no one tries to correct it.</p><h3 id="Slow-website-performance"><a href="#Slow-website-performance" class="headerlink" title="Slow website performance"></a>Slow website performance</h3><p>The layout of website likes 5 years ago, and felt lagged when loading content.</p><h3 id="Lack-of-Popular-Techniques"><a href="#Lack-of-Popular-Techniques" class="headerlink" title="Lack of Popular Techniques"></a>Lack of Popular Techniques</h3><p>Microsoft wants to advertise its own products (C#, WPF, ect.), so there is rarely Java/Ruby/Python challenges (I couldn’t say no because I don’t use it very often). </p><h3 id="Not-Fun-at-All"><a href="#Not-Fun-at-All" class="headerlink" title="Not Fun at All"></a>Not Fun at All</h3><p>Every challenges like ADs, promoting Microsoft latest tools or techniques, but not fun at all. It likes reading a textbook while go through its description.</p><h3 id="No-Feedback"><a href="#No-Feedback" class="headerlink" title="No Feedback"></a>No Feedback</h3><p>If follows the instruction, most of the challenges will be passed, however, if it failed, you couldn’t get any feedbacks to point out the problems. You even couldn’t retry the challenge. </p><h3 id="Redundant-Challenges"><a href="#Redundant-Challenges" class="headerlink" title="Redundant Challenges"></a>Redundant Challenges</h3><p>Because the challenges re-list every month, and not a lot of new ones added. Moreover, you couldn’t retake any challenges no matter you passed or failed. Although the challenges repeated each month, for people who take them, those are redundant.</p><p>All in all, goodbye Microsoft TechRewards.</p><p>~ EOF ~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;\img\ms_tech_reward.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;The Microsoft TechRewards Program will close on January 6, 2017. (&lt;a href=&quot;https://rewards.msdn.microsoft.com/en-us/signin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ref&lt;/a&gt;) All challenges have cleaned up now (Oct-06-2016).&lt;/p&gt;
&lt;p&gt;Really don’t have any hard feeling about this. The only reward attracted me was the AppToCerts, which rewarded you the MS certificate if passed two challenges. Other than it, to achieve a $2 reward, you have to complete at least 3 challenges, and the rewards are all donations.&lt;/p&gt;
&lt;p&gt;So here I will list the reasons why I think it is going to fail:&lt;/p&gt;
    
    </summary>
    
      <category term="News" scheme="https://en.abnerchou.me/categories/News/"/>
    
    
      <category term="Microsoft" scheme="https://en.abnerchou.me/tags/Microsoft/"/>
    
      <category term="TechReward" scheme="https://en.abnerchou.me/tags/TechReward/"/>
    
      <category term="Exam" scheme="https://en.abnerchou.me/tags/Exam/"/>
    
  </entry>
  
  <entry>
    <title>Set up HTTPS Free</title>
    <link href="https://en.abnerchou.me/Blog/daa790/"/>
    <id>https://en.abnerchou.me/Blog/daa790/</id>
    <published>2016-09-22T21:52:47.000Z</published>
    <updated>2019-11-09T18:00:49.085Z</updated>
    
    <content type="html"><![CDATA[<p><img src="\img\https_5.png" alt=""></p><p>Nowadays, it is easy to get an TLS certificate to create HTTPS website (<a href="https://letsencrypt.org/" target="_blank" rel="noopener">Ref</a>), but it requires the full control of server and configuration to maintain. However, for the casual user, like me this blog, I host my content on a third party server (Github Pages), which strictly forbids to customize server settings. To bypass those limits on server side, we need a middle layer to control all traffics, the Cloudflare is the best tool.</p><a id="more"></a><h2 id="Backgrounds"><a href="#Backgrounds" class="headerlink" title="Backgrounds"></a>Backgrounds</h2><p><a href="https://github.com/" target="_blank" rel="noopener">Github</a> provides a service called Github Pages, which allows user to create static content on Github server and access via username.github.io. However, it does not support https for custom domains, and the cache age is only 10 mins and can not be adjusted.</p><p><a href="https://www.cloudflare.com/" target="_blank" rel="noopener">Cloudflare</a> is a DNS and CDN provider. All the basic services are free of charge, and they are already good enough for a static website.</p><p><a href="https://en.wikipedia.org/wiki/HTTPS" target="_blank" rel="noopener">HTTPS</a> is a web portal, which also called HTTP over TLS. It provides secure connect between server and client. To enable this on your server, you have to purchase a certificate from a TLS provider (<strong>not cheap</strong>), and set up it for your domain (<strong>not easy</strong>). One important reason to use HTTPS other than security is speed, that firewalls would skip checking the contents send via HTTPS, hence HTTPS normally faster than HTTP in most scenarios (see <a href="https://www.httpvshttps.com/" target="_blank" rel="noopener">http vs https</a>).</p><p><a href="https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security" target="_blank" rel="noopener">HSTS</a> helps your website more secure. It strictly forbids the HTTP connection on your website, if your website displays a content from a HTTP link, the browser will refuse to load. So before set your site up and run with HTTPS and eliminate mix contents, do not turn it on.</p><h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><h3 id="Settings-on-Github"><a href="#Settings-on-Github" class="headerlink" title="Settings on Github"></a>Settings on Github</h3><p>Set up an Github Pages, add CNAME to the root folder. Here is the <a href="https://help.github.com/articles/using-a-custom-domain-with-github-pages/" target="_blank" rel="noopener">guide</a> for using custom domain with Github pages.</p><h3 id="Settings-on-Cloudflare"><a href="#Settings-on-Cloudflare" class="headerlink" title="Settings on Cloudflare"></a>Settings on Cloudflare</h3><p>First, you have to set up the Cloudflare as your DNS manager. It basically tells the domain provider that DNS is handled by Cloudflare. You can google to find a tutorial about it.</p><p>Then, connect to Github page. Just setting the A and CNAME records on DNS.</p><h3 id="Test-if-Cloudflare-is-working"><a href="#Test-if-Cloudflare-is-working" class="headerlink" title="Test if Cloudflare is working"></a>Test if Cloudflare is working</h3><p>Type the following code in your console (replace theurloftheresource to the actual url)</p><pre class=" language-bash"><code class="language-bash">curl -svo /dev/null http://theurloftheresource</code></pre><p>If the return shows something like CF-Cache-Status: HIT, that means your pages have cached on Cloudflare (<a href="https://support.cloudflare.com/hc/en-us/articles/200169556-How-can-I-tell-if-CloudFlare-is-caching-my-site-or-a-specific-file-" target="_blank" rel="noopener">Ref</a>).</p><h2 id="Set-up-HTTPS-and-Page-Rules"><a href="#Set-up-HTTPS-and-Page-Rules" class="headerlink" title="Set up HTTPS and Page Rules"></a>Set up HTTPS and Page Rules</h2><p>To enable the HTTPS is simple, just need to turn on the Crypto. Here we choose flexible. The full and full(strict) will also connect server (github pages) via HTTPS, which is not possible.</p><p><img src="/img/https_1.png" alt=""></p><p>To turn on the HSTS is as easy as the HTTPS, just click the icon. But you have to click accept to indicate that you acknowledge this setting may break your site if not be set properly. To avoid the risk, we’d better set up the page rules before turn it on.</p><p>There are three basic checks (at least) to turn on the HSTS:</p><ul><li>Always connected via HTTPS</li><li><a href="http://domain.com" target="_blank" rel="noopener">http://domain.com</a> need to redirect to <a href="https://domain.com" target="_blank" rel="noopener">https://domain.com</a></li><li><a href="http://domain.com" target="_blank" rel="noopener">http://domain.com</a> can’t redirect to <a href="https://www.domain.com" target="_blank" rel="noopener">https://www.domain.com</a></li></ul><p>To pass those checks, we only need two page rules (Cloudflare free plan can set maximum three page rules). The first it always using HTTPS, and the second is forwarding URL. Note, the order matters.</p><p><img src="/img/https_2.png" alt=""></p><p>Now enable the HSTS, and then open the <a href="https://hstspreload.appspot.com/" target="_blank" rel="noopener">Chrome preload list</a>, and submit your domain. It should succeed, and shows the following message.</p><p><img src="/img/https_3.png" alt=""></p><p>Everything is set and your website will always be connected through the secure protocol.</p><h2 id="Extra-Page-Rule-Usage"><a href="#Extra-Page-Rule-Usage" class="headerlink" title="Extra Page Rule Usage"></a>Extra Page Rule Usage</h2><p>As we have one more page rule left, you could leave it as blank. But as stated above, the github pages set the Cache-Control: max-age=600, which is 10 mins. That means every 10 mins the user has to fetch data through github page, no matter it changed or not. This is really inefficiency. To overwrite this setting, we could set the browser cache TTL. I set it to one year, because my assets would rarely be modified.</p><p><img src="/img/https_4.png" alt=""></p><p>Moreover, there is another setting that could power up the static website. It is the edge cache TTL, which set the time length that Cloudflare will hold your content caches. For example, if we set it to 2 hours, which means every 2 hours Cloudflare has to fetch data from origin server. Since our static websites do not change a lot, we could set to one month.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The settings for Cloudflare is generic, that means you can use it to set up HTTPS on any kind of server free.</p><p>Cloudflare has plenty powerful services, if using them wisely, can save your life for managing a website.</p><p>Enjoy your secure and faster website!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;\img\https_5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Nowadays, it is easy to get an TLS certificate to create HTTPS website (&lt;a href=&quot;https://letsencrypt.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ref&lt;/a&gt;), but it requires the full control of server and configuration to maintain. However, for the casual user, like me this blog, I host my content on a third party server (Github Pages), which strictly forbids to customize server settings. To bypass those limits on server side, we need a middle layer to control all traffics, the Cloudflare is the best tool.&lt;/p&gt;
    
    </summary>
    
      <category term="Server" scheme="https://en.abnerchou.me/categories/Server/"/>
    
    
      <category term="Github" scheme="https://en.abnerchou.me/tags/Github/"/>
    
      <category term="HTTPS" scheme="https://en.abnerchou.me/tags/HTTPS/"/>
    
      <category term="Cloudflare" scheme="https://en.abnerchou.me/tags/Cloudflare/"/>
    
      <category term="Website" scheme="https://en.abnerchou.me/tags/Website/"/>
    
  </entry>
  
</feed>
